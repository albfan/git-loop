#!/bin/bash

#set -x
#set -v

#TODO filter status files

# ' ' = unmodified
# M = modified
# A = added
# D = deleted
# R = renamed
# C = copied
# U = updated but unmerged

#    X          Y     Meaning
#    -------------------------------------------------
#              [MD]   not updated
#    M        [ MD]   updated in index
#    A        [ MD]   added to index
#    D         [ M]   deleted from index
#    R        [ MD]   renamed in index
#    C        [ MD]   copied in index
#    [MARC]           index and work tree matches
#    [ MARC]     M    work tree changed since index
#    [ MARC]     D    deleted in work tree
#    -------------------------------------------------
#    D           D    unmerged, both deleted
#    A           U    unmerged, added by us
#    U           D    unmerged, deleted by them
#    U           A    unmerged, added by them
#    D           U    unmerged, deleted by us
#    A           A    unmerged, both added
#    U           U    unmerged, both modified
#    -------------------------------------------------
#    ?           ?    untracked
#    !           !    ignored
#    -------------------------------------------------

#TODO: Options for seeing ignored files
#TODO: Options for filter results
#TODO: Options to move around dirs

function doAction() {
   select ACTION in "${ACTIONS[@]}" "$QUIT"
   do
       if [[ "$QUIT" =~ "$REPLY" ]] || [ "$ACTION" == "$QUIT" ]
       then
           break
       fi
       if [ "$ACTION" == "checkout" ] && ([ "$INDEX_STATUS" == "M" ] || [ "$INDEX_STATUS" == "A" ])
       then
           git reset $FILE
       fi
       if [ "$ACTION" == "less" ]
       then
           $ACTION $FILE
       else
           git $ACTION $FILE &>/dev/null
       fi
       if ! [[ "$ACTION" =~ "diff" ]]
       then
           break
       fi
   done
}

QUIT="quit"
NORMAL_PROMPT="
 file> "
DIR_PROMPT="
 dir> "

PS3=$NORMAL_PROMPT
OLDIFS=$IFS
SELECT_IFS="
"

IFS=$SELECT_IFS
while(true)
do
   echo
   select STATUSLINE in $(git status --porcelain) "$QUIT"
   do
       if [[ "$QUIT" =~ "$REPLY" ]] || [ "$STATUSLINE" == "$QUIT" ]
       then
           echo
           exit 0
       fi
       IFS=$OLDIFS
       FILE=$(echo "$STATUSLINE" | cut -c4-)
       INDEX_STATUS=$(echo "$STATUSLINE" | cut -c1)
       WORKTREE_STATUS=$(echo "$STATUSLINE" | cut -c2)
   
       echo
       if [ -d $FILE ]
       then
           echo "listing files in ($FILE)"
           echo
           PS3=$DIR_PROMPT
           select DIRFILE in $(ls -1 $FILE) "$QUIT"
           do
               if [[ "$QUIT" =~ "$REPLY" ]] || [ "$DIRFILE" == "$QUIT" ]
               then
                   break
               fi
               PS3="
 action ($FILE)> "
               ACTIONS=()
               ACTIONS+=("add")
               ACTIONS+=("less")
               OLDFILE="$FILE"
               FILE="$FILE/$DIRFILE"
               echo
               doAction
               FILE="$OLDFILE"
               break
           done
       else
           PS3="
 action ($FILE)> "
           ACTIONS=()
           if [ "$INDEX_STATUS" == "M" ] || [ "$INDEX_STATUS" == "A" ]
           then
               ACTIONS+=("checkout")
               ACTIONS+=("diff --cached")
               ACTIONS+=("reset")
           else
               if [ "$WORKTREE_STATUS" == "M" ]
               then
                   ACTIONS+=("checkout")
                   ACTIONS+=("diff")
                   ACTIONS+=("add")
               elif [ "$WORKTREE_STATUS" == "?" ]
               then
                   ACTIONS+=("add")
               elif [ "$WORKTREE_STATUS" == "!" ]
               then
                   #TODO: Show ignore pattern causing this
                   ACTIONS+=("show-ignore")
               fi
           fi
           doAction
       fi
       PS3=$NORMAL_PROMPT
       IFS=$SELECT_IFS
       break
   done
done
