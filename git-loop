#!/bin/bash

#set -x
#set -v

#TODO filter status files

#    X index
#    Y work tree
#    -------------------------------------------------

#    ' ' = unmodified
#     M  = modified
#     A  = added
#     D  = deleted
#     R  = renamed
#     C  = copied
#     U  = updated but unmerged

#    X          Y     Meaning
#    -------------------------------------------------
#              [MD]   not updated
#    M        [ MD]   updated in index
#    A        [ MD]   added to index
#    D         [ M]   deleted from index
#    R        [ MD]   renamed in index
#    C        [ MD]   copied in index
#    [MARC]           index and work tree matches
#    [ MARC]     M    work tree changed since index
#    [ MARC]     D    deleted in work tree
#    -------------------------------------------------
#    D           D    unmerged, both deleted
#    A           U    unmerged, added by us
#    U           D    unmerged, deleted by them
#    U           A    unmerged, added by them
#    D           U    unmerged, deleted by us
#    A           A    unmerged, both added
#    U           U    unmerged, both modified
#    -------------------------------------------------
#    ?           ?    untracked
#    !           !    ignored
#    -------------------------------------------------

#TODO: Options for seeing ignored files
#TODO: Options for filter results
#TODO: Options to move around dirs

function doAction() {
   select ACTION in "${ACTIONS[@]}" "$QUIT"
   do
      if [[ "$QUIT" =~ "$REPLY" ]] || [ "$ACTION" == "$QUIT" ]
      then
         break
      fi
      if [ "$ACTION" == "checkout" ] && ([ "$INDEX_STATUS" == "M" ] || [ "$INDEX_STATUS" == "A" ])
      then
         git reset $FILE
      fi
      GIT=git
      if [ "$ACTION" == "less" ] || ([ "$ACTION" == "rm" ] && [ "$INDEX_STATUS" == "?" ])
      then
         GIT=
      fi
      OUT=
      if ! [[ "$ACTION" =~ "diff" ]]
      then
         OUT=&>/dev/null
      fi
      $GIT $ACTION $FILE $OUT
      if ! [[ "$ACTION" =~ "diff" ]]
      then
         break
      fi
   done
}

function relpath() {
   source=$1
   target=$2

   common_part=$source
   back=
   while [ "${target#$common_part}" = "${target}" ]; do
      common_part=$(dirname $common_part)
      back="../${back}"
   done

   echo ${back}${target#$common_part/}
}

function parse_porcelain() {
   for STATUSLINE in $(git status --porcelain)
   do
      STATUS="$(echo "$STATUSLINE" | cut -c-3)"
      FILE="$REPO_DIR/$(echo "$STATUSLINE" | cut -c4-)"
      FILE=$(relpath "$PWD" "$FILE")
      echo "${STATUS}${FILE}"
   done
}

function global_commands() {
   for GLOBAL_COMMAND in commit pull push $(git config --get-regexp loop.global-command | cut -d ' ' -f2-)
   do
      echo $'\e[35m'$GLOBAL_COMMAND$'\e[m'
   done
}

function custom_actions() {
   for CUSTOM_ACTION in $(git config --get-regexp loop.$1-command | cut -d ' ' -f2-)
   do
      ACTIONS+=($CUSTOM_ACTION)
   done
}

if [ -z "$(git status --porcelain)" ]
then
   echo no changes in repo
   exit
fi

REPO_DIR=$(git rev-parse --show-toplevel)
QUIT="quit"
NORMAL_PROMPT="
 file> "
DIR_PROMPT="
 dir> "

PS3=$NORMAL_PROMPT
OLDIFS=$IFS
SELECT_IFS="
"

while(true)
do
   echo
   GLOBAL_COMMANDS=$(global_commands)
   IFS=$SELECT_IFS
   select STATUSLINE in $(parse_porcelain | sed '/^M \|^A \|^D \|^R \|^C /s/.*/\x1b[32m&\x1b[m/;/^ M\|^ D/s/.*/\x1b[31m&\x1b[m/;/^MM/s/.*/\x1b[33m&\x1b[m/;/^??/s/.*/\x1b[34m&\x1b[m/') $GLOBAL_COMMANDS "$QUIT"
   do
      if [[ "$QUIT" =~ "$REPLY" ]] || [ "$STATUSLINE" == "$QUIT" ]
      then
         echo
         exit 0
      fi
      IFS=$OLDIFS
      STATUSLINE=$(echo "$STATUSLINE" | sed -r "s/\x1B\[[0-9;]*[mK]//g")
      if [ "$STATUSLINE" = "commit" ] || [ "$STATUSLINE" = "pull" ] || [ "$STATUSLINE" = "push" ]
      then
         git $STATUSLINE
         break
      fi

      FILE="$(echo "$STATUSLINE" | cut -c4-)"
      INDEX_STATUS=$(echo "$STATUSLINE" | cut -c1)
      WORKTREE_STATUS=$(echo "$STATUSLINE" | cut -c2)
   
      echo
      if [ -d "$FILE" ]
      then
         echo "listing files in ($FILE)"
           echo
           PS3=$DIR_PROMPT
           select DIRFILE in $(ls -1 $FILE) "$QUIT"
           do
               if [[ "$QUIT" =~ "$REPLY" ]] || [ "$DIRFILE" == "$QUIT" ]
               then
                   break
               fi
               PS3="
 action ($FILE)> "
               ACTIONS=()
               ACTIONS+=("add")
               ACTIONS+=("less")
               OLDFILE="$FILE"
               FILE="$FILE/$DIRFILE"
               echo
               doAction
               FILE="$OLDFILE"
               break
           done
       else
           PS3="
 action ($FILE)> "
           ACTIONS=()
           if [ "$INDEX_STATUS" == "M" ] || [ "$INDEX_STATUS" == "A" ]
           then
               ACTIONS+=("checkout")
               ACTIONS+=("diff --cached")
               if [ "$WORKTREE_STATUS" == "M" ]
               then
                   ACTIONS+=("diff")
                   ACTIONS+=("add -p")
                   ACTIONS+=("add")
               fi
               ACTIONS+=("reset")
           elif [ "$INDEX_STATUS" == "D" ]
           then
               ACTIONS+=("reset")
               ACTIONS+=("less")
           else
               if [ "$WORKTREE_STATUS" == "D" ]
               then
                   ACTIONS+=("checkout")
                   ACTIONS+=("rm")
                   ACTIONS+=("less")
               elif [ "$WORKTREE_STATUS" == "M" ]
               then
                   ACTIONS+=("checkout")
                   ACTIONS+=("diff")
                   custom_actions diff
                   ACTIONS+=("add -p")
                   ACTIONS+=("add")
               elif [ "$WORKTREE_STATUS" == "?" ]
               then
                   ACTIONS+=("add")
                   ACTIONS+=("rm")
                   ACTIONS+=("less")
               elif [ "$WORKTREE_STATUS" == "!" ]
               then
                   #TODO: Show ignore pattern causing this
                   ACTIONS+=("show-ignore")
               fi
           fi
           doAction
       fi
       PS3=$NORMAL_PROMPT
       break
   done
done
